<?php

/**
 * @file
 * Main module file.
 */

use Drupal\node\NodeInterface;
use Drupal\Core\Form\FormStateInterface;

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Entity\EntityInterface;

define('DROPSOLID_OFFICE_CORE_ANCHOR', 'contact-us');

/**
 * Implements hook_entity_access().
 */
function dropsolid_office_core_webform_access(EntityInterface $entity, $operation, AccountInterface $account) {
  // Restrict access to editing this webform.
  /** @var \Drupal\webform\WebformInterface $entity */
  if (!$account->hasPermission('administer webform') && $entity->id() === 'office_contact' && ($operation === 'update' || $operation === 'delete')) {
    return AccessResult::forbidden('This webform is part of a premade feature and can not be edited or deleted.')
      ->addCacheContexts(['user.permissions']);
  }
}

/**
 * Implements hook_token_info_alter().
 */
function dropsolid_office_core_token_info_alter(&$data) {
  $data['tokens']['webform_submission']['site-mail-or-office-override'] = [
    'name' => t('Site email or the email set in the Office where the form is located.'),
    'description' => t('Site email or the email set in the Office where the form is located, if the override is enabled for that Office node.'),
  ];
}

/**
 * Implements hook_tokens().
 */
function dropsolid_office_core_tokens($type, $tokens, array $data = [], array $options = []) {
  $replacements = [];

  if ($type == 'webform_submission' && !empty($data['webform_submission'])) {
    /** @var \Drupal\webform\WebformSubmissionInterface $webform_submission */
    $webform_submission = $data['webform_submission'];
    $source_entity = $webform_submission->getSourceEntity(TRUE);
    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'site-mail-or-office-override':
          $replacements[$original] = \Drupal::config('system.site')
            ->get('mail');
          if ($source_entity && $source_entity->getEntityTypeId() === 'node' && $source_entity->bundle() === 'office') {
            // Do some checks, make sure it's got the right fields, etc.
            // @todo: do tokens need caching or something?
            if (method_exists($source_entity, 'hasField') && $source_entity->hasField('field_office_override_mail') && !empty($source_entity->get('field_office_override_mail')->value)) {
              $replacements[$original] = $source_entity->get('field_office_override_mail')->value;
            }
          }
          break;
      }
    }
  }

  return $replacements;
}

/**
 * Implements hook_themes_installed().
 *
 * Disable some blocks when one of our themes gets installed and this module
 * is already active at the time.
 */
function dropsolid_office_core_themes_installed($theme_list) {
  foreach ($theme_list as $theme) {
    if (in_array($theme, ['dropsolid_starter', 'dropsolid_flex'])) {
      Rocketship::hideBreadcrumbAndTitleBlockOnContentType($theme, 'office');
      dropsolid_office_core_place_default_blocks($theme);
    }
  }
}

/**
 * Implements hook_module_implements_alter().
 *
 * Make sure we go after block_themes_installed.
 */
function dropsolid_office_core_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'themes_installed') {
    $group = $implementations['dropsolid_office_core'];
    unset($implementations['dropsolid_office_core']);
    $implementations['dropsolid_office_core'] = $group;
  }
}

/**
 * Place our blocks in a doormat region of the provided theme.
 *
 * @param string $theme
 *   Theme name.
 */
function dropsolid_office_core_place_default_blocks($theme) {
  Rocketship::placeBlock('views_block:footer_offices-footer', [
      'region' => 'doormat',
      'theme' => $theme,
      'label' => 'Contact',
      'provider' => 'views',
      'label_display' => 'visible',
      'views_label' => 'Contact',
      'items_per_page' => 0,
    ]
  );
}

/**
 * Implements hook_form_alter().
 */
function dropsolid_office_core_form_webform_submission_office_contact_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  $form['scroll_to'] = [
    // Fingers crossed nobody puts two of these on the same page.
    // Can't use Unique ID method cuz this alter gets called twice per request.
    '#markup' => '<div id="' . DROPSOLID_OFFICE_CORE_ANCHOR . '" class="scroll-to-anchor"></div>',
    '#weight' => -9999,
  ];

}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 *
 * Change the text for Promoted to front & hide sticky if
 * advanced isn't enabled.
 */
function dropsolid_office_core_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form_object = $form_state->getFormObject();
  /** @var \Drupal\node\NodeInterface $node */
  $node = $form_object->getEntity();

  if ($node->bundle() !== 'office') {
    return;
  }

  $form['promote']['widget']['value']['#title'] = t('Show this office in the footer of your site');
  $form['options']['#open'] = TRUE;
  if (!\Drupal::moduleHandler()->moduleExists('dropsolid_office_advanced')) {
    // No use for sticky until Advanced is enabled.
    $form['sticky']['#access'] = FALSE;
  }
}

/**
 * Implements hook_local_tasks_alter().
 */
function dropsolid_office_core_menu_local_tasks_alter(&$local_tasks) {
  if (isset($local_tasks['tabs'][0]['webform_view:webform_views:view.doffice_contact_submissions.application_page'])) {
    // Only show Submissions link on Office nodes.
    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node instanceof NodeInterface && $node->bundle() !== 'office') {
      unset($local_tasks['tabs'][0]['webform_view:webform_views:view.doffice_contact_submissions.application_page']);
    }
  }
}
